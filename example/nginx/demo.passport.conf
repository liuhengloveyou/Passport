upstream passport_backend {
    server  127.0.0.1:10001 max_fails=3 fail_timeout=30s;
}

server {
    listen 8001;
    server_name  demo.passport.com;

    access_log  /tmp/access.log  main;
    error_log  /tmp/error.log;

    default_type 'application/json;charset-UTF-8';
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;
    
    # curl -v -X GET -H "Host:demo.passport.com" --cookie "go-session-id=MTYxNDE0N" "http://127.0.0.1/api"
    location ~ ^/api/ {
        access_by_lua_file /Users/liuheng/dev/go/passport/example/nginx/access_by_passport.lua;

        content_by_lua_block {
            local ck = require "resty.cookie"
            local cookie, err = ck:new()
            if not cookie then
                ngx.log(ngx.ERR, err)
                return
            end

            -- get all cookies
            local fields, err = cookie:get_all()
            if not fields then
                ngx.log(ngx.ERR, err)
                return
            end

            for k, v in pairs(fields) do
                ngx.say("logic:: ", k, " => ", v)
            end

            ngx.say("logic::session:: ", ngx.var.http_session)

            ngx.say('Hello,world!')
        }
    }

    # curl -v -X POST -H "Host:demo.passport.com" -H "X-API: user/login" -d '{"cellphone": "17688396387", "password": "123456"}' "http://127.0.0.1/user"
    location /usercenter {
        proxy_pass http://passport_backend;
    }
}
